// Splitting code

// Сборка (или «бандлинг») — это процесс выявления импортированных файлов и объединения их в один «собранный» файл (часто называемый «bundle» или «бандл»). Этот бандл после подключения на веб-страницу загружает всё приложение за один раз.

// По мере роста вашего приложения, ваш бандл тоже будет расти. Вам нужно следить за кодом, который вы подключаете, чтобы не сделать приложение настолько большим, что его загрузка займёт слишком много времени.

// Чтобы предотвратить разрастание бандла, стоит начать «разделять» ваш бандл.

// Избежите загрузки кода, который может никогда не понадобиться пользователю и уменьшите объём кода, необходимый для начальной загрузки.

// Лучший способ внедрить разделение кода в приложение — использовать синтаксис динамического импорта: import()

// До:
// import { add } from './math';
// console.log(add(16, 26));
// После:
// import("./math").then(math => {
//   console.log(math.add(16, 26));
// });

// Когда Webpack сталкивается с таким синтаксисом, он автоматически начинает разделять код вашего приложения.

// Если вы используете Babel, вам необходимо убедиться, что он понимает синтаксис динамического импорта. Для этого вам необходимо установить плагин @babel/plugin-syntax-dynamic-import.

// Функция React.lazy позволяет рендерить динамический импорт как обычный компонент.

// const OtherComponent = React.lazy(() => import('./OtherComponent'));

// Она автоматически загрузит бандл, содержащий OtherComponent, когда этот компонент будет впервые отрендерен.

// React.lazy принимает функцию, которая должна вызвать динамический import(). Результатом возвращённого Promise является модуль, который экспортирует по умолчанию React-компонент (export default).

// Компонент с ленивой загрузкой должен рендериться внутри компонента Suspense, который позволяет нам показать запасное содержимое (например, индикатор загрузки) пока происходит загрузка ленивого компонента.

// import React, { Suspense } from 'react';

// <Suspense fallback={<div>Загрузка...</div>}>
//   <OtherComponent />
// </Suspense>

// Проп fallback принимает любой React-элемент, который вы хотите показать, пока происходит загрузка компонента. Компонент Suspense можно разместить в любом месте над ленивым компонентом. Кроме того, можно обернуть несколько ленивых компонентов одним компонентом Suspense.

// Если какой-то модуль не загружается, это вызовет ошибку. После создания предохранителя, его можно использовать в любом месте над ленивыми компонентами для отображения состояния ошибки.

// следует выбрать такие места, чтобы код разделялся на бандлы примерно одного размера
// Часто таким удобным местом оказываются маршруты.

// React.lazy в настоящее время поддерживает только экспорт по умолчанию.
// можно создать промежуточный модуль, который повторно экспортирует его как модуль по умолчанию. Это гарантирует работоспособность tree shaking — механизма устранения неиспользуемого кода.