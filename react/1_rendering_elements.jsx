import React from "react";
// 1. Rendering elements

// Элементы — мельчайшие кирпичики React-приложений.

// Элемент описывает то, что вы хотите увидеть на экране:
// Элементы — это то, «из чего сделаны» компоненты

const element = <h1>Hello, word!</h1>;

// В отличие от DOM-элементов, элементы React — это простые объекты, не отнимающие много ресурсов. React DOM обновляет DOM, чтобы он соответствовал переданным React-элементам.

// Для рендеринга React-элемента в корневой узел DOM вызовите ReactDOM.render() с React-элементом и корневым DOM узлом в качестве аргументов:

import ReactDOM from "react-dom";

ReactDOM.render(element, document.getElementById("root"));

// Элементы React иммутабельны. После создания элемента нельзя изменить его потомков или атрибуты.

// Есть только один способ обновить интерфейс — это создать новый элемент и передать его в ReactDOM.render().

setInterval(() => {
  ReactDOM.render(<h2>It is {new Date().toLocaleTimeString()}.</h2>, document.getElementById("root"));
}, 1000);

// Несмотря на то, что мы создаём элемент, описывающий всё UI-дерево, каждую секунду React DOM изменяет только текстовый узел, содержимое которого изменилось.

// ReactDOM.render() управляет содержимым передаваемого вами узла контейнера. Любые существующие элементы DOM внутри заменяются при первом вызове.

// ReactDOM.render(element, container[, callback])

// Рендерит React-элемент в DOM-элемент, переданный в аргумент container и возвращает ссылку на корневой экземпляр ReactComponent. (или возвращает null для компонентов без состояния).Однако использование этого возвращаемого значения является устаревшим и этого следует избегать.

// Если React-элемент уже был ранее отрендерен в container, то повторный вызов произведёт его обновление и изменит соответствующую часть DOM, чтобы она содержала последние изменения.

// Если дополнительно был предоставлен callback, он будет вызван после того, как компонент отрендерится или обновится.


// ReactDOM.unmountComponentAtNode(container)
// Удаляет смонтированный компонент React из DOM и очищает его обработчики событий и состояние. Если в контейнер не было смонтировано ни одного компонента, вызов этой функции ничего не делает. Возвращает true, если компонент был размонтирован, и false если нет компонента для размонтирования.

